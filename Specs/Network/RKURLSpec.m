//
//  RKURLSpec.m
//  RestKit
//
//  Created by Blake Watters on 6/29/11.
//  Copyright 2011 RestKit
//  
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//  
//  http://www.apache.org/licenses/LICENSE-2.0
//  
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//

#import "RKSpecEnvironment.h"
#import "RKURL.h"
#import "NSURL+RestKit.h"

@interface RKURLSpec : RKSpec
@end
    
@implementation RKURLSpec

- (void)testShouldNotExplodeBecauseOfUnicodeCharacters {
    NSException* failed = nil;
    @try {
        [RKURL URLWithBaseURLString:@"http://test.com" resourcePath:@"/places.json?category=AutomÃ³viles"];
    }
    @catch (NSException *exception) {
        failed = exception;
    }
    @finally {
        NSAssert((failed == nil), @"No exception should be generated by creating URL with Unicode chars");
    }
}

- (void)testShouldEscapeQueryParameters {
    NSDictionary* queryParams = [NSDictionary dictionaryWithObjectsAndKeys:@"What is your #1 e-mail?", @"question", @"john+restkit@gmail.com", @"answer", nil];
    RKURL* URL = [RKURL URLWithBaseURLString:@"http://restkit.org" resourcePath:@"/test" queryParams:queryParams];
    assertThat([URL absoluteString], is(equalTo(@"http://restkit.org/test?answer=john%2Brestkit%40gmail.com&question=What%20is%20your%20%231%20e-mail%3F")));
}

- (void)testShouldHandleNilQueryParameters {
    RKURL* URL = [RKURL URLWithBaseURLString:@"http://restkit.org" resourcePath:@"/test" queryParams:nil];
    assertThat([URL absoluteString], is(equalTo(@"http://restkit.org/test")));
}

- (void)testShouldHandleEmptyQueryParameters {
    RKURL* URL = [RKURL URLWithBaseURLString:@"http://restkit.org" resourcePath:@"/test" queryParams:[NSDictionary dictionary]];
    assertThat([URL absoluteString], is(equalTo(@"http://restkit.org/test")));
}

- (void)testShouldHandleResourcePathWithoutLeadingSlash {
    RKURL* URL = [RKURL URLWithBaseURLString:@"http://restkit.org" resourcePath:@"test"];
    assertThat([URL absoluteString], is(equalTo(@"http://restkit.org/test")));
}

- (void)testShouldHandleEmptyResourcePath {
    RKURL* URL = [RKURL URLWithBaseURLString:@"http://restkit.org" resourcePath:@""];
    assertThat([URL absoluteString], is(equalTo(@"http://restkit.org")));
}

- (void)testShouldHandleBaseURLsWithAPath {
    RKURL* URL = [RKURL URLWithBaseURLString:@"http://restkit.org/this" resourcePath:@"/test" queryParams:nil];
    assertThat([URL absoluteString], is(equalTo(@"http://restkit.org/this/test")));
}

- (void)testShouldSimplifyURLsWithSeveralSlashes {
    RKURL* URL = [RKURL URLWithBaseURLString:@"http://restkit.org//this//" resourcePath:@"/test" queryParams:nil];
    assertThat([URL absoluteString], is(equalTo(@"http://restkit.org/this/test")));
}

- (void)testShouldPreserveTrailingSlash {
    RKURL* URL = [RKURL URLWithBaseURLString:@"http://restkit.org" resourcePath:@"/test/" queryParams:nil];
    assertThat([URL absoluteString], is(equalTo(@"http://restkit.org/test/")));    
}

- (void)testShouldReturnTheMIMETypeForURL {
    NSURL *URL = [NSURL URLWithString:@"http://restkit.org/path/to/resource.xml"];
    assertThat([URL MIMETypeForPathExtension], is(equalTo(@"application/xml")));
}


/**
 Verify that we can append long (>1024 character) query parameters
 */
- (void)testLongQueryParameters {
    NSString *longParamRaw = @"RecordType.Name,Account_Location__c,LastModifiedBy.email,CreatedBy.mobilephone,jsSDO__Sync_Status_Indicator__c,id,Owner.email,Owner.phone,Owner.city,Industry,Name,ShippingCountry,CreatedBy.title,Owner.aboutme,IsPersonAccount,LastModifiedBy.mobilephone,LastModifiedBy.aboutme,NumberOfEmployees,LastModifiedBy.fullphotourl,BillingCity,Owner.currentstatus,LastModifiedBy.currentstatus,BillingStreet,LastModifiedBy.title,Parent.RecordTypeId,CreatedBy.smallphotourl,AnnualRevenue,ParentId,jsSDO__Duplicate__c,LastModifiedById,Owner.department,FN__Find_Nearby__c,LastModifiedBy.department,LastModifiedBy.name,ShippingState,FN__Which_Address__c,OwnerId,jsSDO__Jigsaw_Id__c,CreatedBy.currentstatus,LastModifiedBy.state,Website,Owner.title,Parent.Name,Parent.id,CreatedDate,CreatedBy.aboutme,Fax,BillingState,BillingPostalCode,Owner.fullphotourl,RecordTypeId,Owner.name,Closed_Won_Value__c,CreatedBy.city,CreatedBy.phone,ShippingCity,CreatedById,Owner.mobilephone,LastModifiedBy.phone,LastModifiedBy.smallphotourl,CreatedBy.state,Owner.state,ShippingStreet,CreatedBy.email,Owner.smallphotourl,CreatedBy.department,LastModifiedDate,ShippingPostalCode,RecordType.id,PersonContactId,CreatedBy.name,Type,Phone,LastModifiedBy.city,jsSDO__Additional_Information__c,jsSDO__Jigsaw_Last_Sync_Locked__c,FN__Mapping_Status__c,CreatedBy.fullphotourl,BillingCountry";
    
    NSString *longParam = [longParamRaw stringByAddingURLEncoding];
        
    NSDictionary *queryParams = [NSDictionary dictionaryWithObject:longParamRaw forKey:@"fields"];
    NSString *baseUrlStr = @"https://na1.salesforce.com";
    NSString *resourcePath = @"/services/data/v23.0/sobjects/Account/0013000000sps6sAAA";
    NSString *expectedUrlStr = [NSString stringWithFormat:@"%@%@?fields=%@",baseUrlStr,resourcePath,longParam];
    
    RKURL* URL = [RKURL URLWithBaseURLString:baseUrlStr 
                              resourcePath:resourcePath 
                               queryParams:queryParams];

    NSString *urlStr = [URL absoluteString];    
    assertThat(urlStr, is(equalTo(expectedUrlStr)));    


}
@end
 